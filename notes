//Reduce Function
/*function pokeWeight(single_pokemon) {
    return single_pokemon.reduce((weight, pokemon) => {
        return (weight.weight || 0) > pokemon.age ? weight : pokemon
    }, 0)
    const testArray = [5,10,15,20,25,30,35,40,45,50,30]
const testReduce = testArray.reduce((acc, num) => {
    return acc + num
}, 0)
}*/



/*async function getPokemonData(url) {
    const response = await fetch('url');
    const myJson = await response.json();
};
*/

Star Wars Button Code
/*Buttons Code - Has Issues and Needs to be Fixed
    const mCharacters = people.filter(person => person.gender === 'male');
    const fCharacters = people.filter(person => person.gender === 'female');
    console.log(mCharacters);
    console.log(fCharacters);
    
    const allDiv = Array.from(document.querySelector('div'));
    const mainHeader = document.querySelector('header');
    let mButton = document.createElement('button');
    mButton.textContent = "Male Characters";
    if (matchedDiv.getAttribute('style') === "display: none;")
    {
        matchedDiv.setAttribute("style", "display: revert;");
    }
    mButton.addEventListener('click', () => {
      fCharacters.forEach(character => {
        let matchedDiv = allDivs.find(oneDiv => {
          return oneDiv.firstChild.textContent === character.name;
        })
      //  matchedDiv.setAttribute("style", "display: none;");
      })
    })
    let fButton = document.createElement('button');
fButton.textContent = 'Female Characters';
fButton.addEventListener('click', () => {
  mCharacters.forEach(character => {
    let matchedDiv = allDivs.find(oneDiv => {
      return oneDiv.firstChild.textContent === character.name;
    })
    matchedDiv.setAttribute("style", "display: revert;");
  })
})
mainHeader.appendChild(mButton);
mainHeader.appendChild(fButton);


mainHeader.appendChild(mButton);
mainHeader.appendChild(fButton);

const mCharacters = people.filter(person => person.gender === 'male');
const fCharacters = people.filter(person => person.gender === 'female');
const oCharacters = people.filter(person => person.gender !== 'female' && person.gender !== 'male');
*/


#contact {
  display: flex;
 flex-direction: column;
  align-items: center;
  background-color: var(--black);
  color: var(--white);
}
#profiles {
  display: flex;
  align-items: center;
}
#profiles figure {
  padding: 10px;
}


#profiles figcaption {
  padding-top: 10px;
  color: var(--white);
}

#contact figure img {
 width: 50px;
  height: 50px;
}



Require in getAPI Function: const poison = await getPoison(data.id)
        data.poison = Poison
async function getPoison(pokemonID) {
    getAPIData(`https://pokeapi.co/api/v2/pokemon/${pokemonID}`)
    .then (pokemon => {
        const poison = pokemon.types.find(element => {
            return element.type.name === 'poison'
        
        })
        return poison.name
    })
  }